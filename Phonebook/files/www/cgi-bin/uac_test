#!/bin/sh
# UAC Test Call Trigger
# Usage: curl "http://node/cgi-bin/uac_test?target=441422"

echo "Content-Type: application/json"
echo "Access-Control-Allow-Origin: *"
echo ""

# Parse query string for target parameter
TARGET=""
if [ -n "$QUERY_STRING" ]; then
    # Extract target parameter from query string
    for param in $(echo "$QUERY_STRING" | tr '&' ' '); do
        key=$(echo "$param" | cut -d'=' -f1)
        value=$(echo "$param" | cut -d'=' -f2)
        if [ "$key" = "target" ]; then
            TARGET="$value"
        fi
    done
fi

# Validate target parameter
if [ -z "$TARGET" ]; then
    echo '{"status":"error","message":"Missing target parameter. Usage: /cgi-bin/uac_test?target=441422"}'
    exit 1
fi

# Validate target is numeric
case "$TARGET" in
    ''|*[!0-9]*)
        echo "{\"status\":\"error\",\"message\":\"Invalid target number. Must be numeric: $TARGET\"}"
        exit 1
        ;;
esac

# Send SIGUSR2 to AREDN-Phonebook with target number
# We'll use a temporary file to pass the target number
UAC_TARGET_FILE="/tmp/uac_test_target"
echo "$TARGET" > "$UAC_TARGET_FILE"

# Find AREDN-Phonebook PID
PID=$(pgrep -f "AREDN-Phonebook" | head -n1)

if [ -z "$PID" ]; then
    echo '{"status":"error","message":"AREDN-Phonebook is not running"}'
    rm -f "$UAC_TARGET_FILE"
    exit 1
fi

# Send signal to trigger UAC test
kill -USR2 "$PID"

# Give it a moment to process
sleep 1

# Check logs for result
RECENT_LOGS=$(logread | grep -E "UAC_CALL|UAC_RESPONSE" | tail -20)

echo "{"
echo "  \"status\": \"success\","
echo "  \"message\": \"UAC test call triggered to $TARGET\","
echo "  \"pid\": $PID,"
echo "  \"target\": \"$TARGET\","
echo "  \"note\": \"Check logs with: logread | grep UAC\""
echo "}"
