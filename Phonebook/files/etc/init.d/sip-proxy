#!/bin/sh /etc/rc.common
# This is an OpenWrt init.d script for your SIP proxy

START=99 # Start late in the boot sequence
STOP=10  # Stop early during shutdown

USE_PROCD=1 # Use procd for better service management

# Function to start the service
start_service() {
    # Create the directory for the phonebook if it doesn't exist
    mkdir -p /www/arednstack

    # Start the SIP server in the background
    # It will log to syslog automatically via procd
    procd_open_instance
    procd_set_param command /usr/bin/sipserver
    procd_set_param stdout 1 # Redirect stdout to syslog
    procd_set_param stderr 1 # Redirect stderr to syslog
    procd_set_param respawn  # Automatically restart if it crashes
    procd_close_instance
}

# Function to stop the service (optional for procd, but good practice)
stop_service() {
    # procd will handle stopping instances started by procd_open_instance
    return 0
}

# Add a custom command for manual directory reload if needed
# (The integrated fetcher thread handles automatic reloads)
# service_reload() {
#     local pid
#     pid=$(pgrep sipserver)
#     if [ -n "$pid" ]; then
#         echo "Sending SIGUSR1 to sipserver (PID $pid) for directory reload."
#         kill -USR1 "$pid" # Note: SIGUSR1 is NOT USED IN THIS UNIFIED CODE.
#                           # Reload is triggered by the reload_directory_flag.
#                           # So this function is mostly for show or if you re-implement external signal handling.
#     else
#         echo "sipserver not running."
#     fi
# }